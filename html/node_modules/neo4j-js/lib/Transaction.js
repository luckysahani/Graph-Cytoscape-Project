var arguer = require('arguer');

module.exports = function (neo4j)
{
	/* ========================================================================================================
	 * 
	 * Private Members Declaration (no methods)
	 * 
	 * ===================================================================================================== */
	
	var _queryFormat = [ { name: 'query', type: 'string' },
						   { name: 'props', nType: 'function', optional: true },
						   { name: 'callback', type: 'function' } ];
	
	/* ========================================================================================================
	 * 
	 * Public Members Declaration (no methods)
	 * 
	 * ===================================================================================================== */
	
	// code

	/* ========================================================================================================
	 * 
	 * Transaction Class - Provides an inheritance for the transactional endpoint.
	 * 
	 * ===================================================================================================== */

	function Transaction ()
	{
		this.errorHandler = null;
		this.expires = null;
		this.stream = false;
	}
	
	/* ========================================================================================================
	 * 
	 * Static Methods - Keep in alphabetical order
	 * 
	 * ===================================================================================================== */
	
	Transaction.singleTransactionQuery = function (query, /* params, */ callback)
	{
		var args = arguer(arguments, _queryFormat);
		
		//
	};
	
	/* ========================================================================================================
	 * 
	 * Public Methods - Keep in alphabetical order
	 * 
	 * ===================================================================================================== */
	
	Transaction.prototype.commit = function (callback)
	{
		//
	};
	
	Transaction.prototype.execute = function (callback)
	{
		//
	};
	
	Transaction.prototype.query = function (query, /* params, */ callback)
	{
		var args = arguer(arguments, _queryFormat);
		//
	};
	
	Transaction.prototype.reset = function (callback)
	{
		//
	};
	
	Transaction.prototype.rollback = function (callback)
	{
		//
	};
	
	/* ========================================================================================================
	 * 
	 * Private Methods - Keep in alphabetical order
	 * 
	 * ===================================================================================================== */
	
	function parseResults (results)
	{
		//
	}
	
	/* ========================================================================================================
	 * 
	 * Initialization
	 * 
	 * ===================================================================================================== */
	
	return Transaction;

};